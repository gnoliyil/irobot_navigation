# max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
# 机器人半径，此处设0.2m
robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

map_type: voxel

obstacle_layer:
  enabled:              true   
  origin_z:             0.0
  z_resolution: 0.2              # z轴分辨率：单位 m/cell
  z_voxels: 2
  unknown_threshold:    15
  mark_threshold:       0       # The maximum number of marked cells allowed in a column considered to be "free". 
  combination_method:   1       
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.0            # mark障碍的最大距离
  raytrace_range: 3.0            # clear障碍的最大距离
  origin_z: 0.0 
  publish_voxel_map: false       # 是否做小地图 （？）
  observation_sources: scan
  scan:
    data_type: PointCloud2       # 扫描的topic类型（就是/camera/depth/points的类型）
    sensor_frame: camera_link    # 相机在tf中对应的frame（根据相机驱动确定，相机驱动用的是camera_link，这里也用camera_link）
    topic: camera/depth/points   # 这个source对应的topic，可以填绝对或者相对路径
    marking: true                # 该observation source的信息是否可以用来添加costmap里的障碍
    clearing: true               # 该observation source的信息是否可以用来清除costmap里的障碍
    min_obstacle_height: 0.0 
    max_obstacle_height: 100.0   # 障碍物高度限制，单位m

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
# The inflation layer is an optimization that adds new values around lethal obstacles 
# (i.e. inflates the obstacles) in order to make the costmap represent the configuration space of the robot. 
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.5  # max. distance from an obstacle at which costs are incurred for planning paths.

# 静态地图
static_layer:
  enabled:              true
  

